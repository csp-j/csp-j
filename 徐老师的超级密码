徐老师的超级密码
该比赛已结束，您无法在比赛模式下递交该题目。您可以点击“在题库中打开”以普通模式查看和递交本题。

说明
徐老师的服务器最近又被攻击了，肯定是密码强度不够高！

徐老师现在的密码是一个仅由小写字母组成的长度为 nnn 的字符串

而现在徐老师希望想一个长度为 mmm 的新密码，但是为了让徐老师能更好的记住新密码

他希望新密码和旧密码是有一定关系的，最好是由旧密码的一部分构成

所以他决定对新密码进行一种操作来构造新密码：将旧密码末尾一定长度删除后加在新密码的末尾

现在徐老师想知道能够造出字典序最小的新密码是什么？
输入格式
输入第一行包含两个整数 n,mn,mn,m 表示旧密码和新密码的长度
输入第二行包含一个仅由小写字母构成的字符串，表示旧密码
| 测试点编号 | n,mn,mn,m         |
| :---: |    :---: |
| 1∼21 \sim 21∼2         | 1≤n,m≤101 \leq n,m \leq 101≤n,m≤10   |
| 3∼43 \sim 43∼4         | 1≤n,m≤1031 \leq n,m \leq 10^31≤n,m≤103 |
| 5∼75 \sim 75∼7         | 1≤n,m≤1051 \leq n,m \leq 10^51≤n,m≤105 | 
| 8∼108 \sim 108∼10        | 1≤n,m≤1061 \leq n,m \leq 10^61≤n,m≤106 | 

特殊情况：测试数据 888 的 m=1m = 1m=1

输出格式
输出一个长度为 mmm 的字符串表示新密码

样例
输入数据 1
5 12
akcsp
Copy
输出数据 1
aaaaaaaaaaaa
Copy
提示
切掉末尾的 `kcsp` 剩下 `a`，然后复制 121212 遍字符串得到 `aaaaaaaaaaaa`
#include<iostream>
#include<cstdio>
using namespace std;
char a[1000005];
int main(){
//	freopen(".in","r",stdin);
//	freopen(".out","w",stdout);
	int i=1,n,m;
	scanf("%d%d",&n,&m);
	scanf("%s",a+1);
	while(i<n){
		if(a[i+1]<a[1]){i++;continue;}
		if(a[i+1]==a[1]){
			int g=i+1;
			while(g<=n&&a[g]==a[(g-i-1)%i+1])g++;
			if(g<=n&&a[g]<a[(g-i-1)%i+1]){i=g;continue;} 
		} 
		break;
	} 
	for(int s=1,j=1;s<=m;s++,j=j%i+1){
		printf("%c",a[j]);
	}
	return 0;
}
